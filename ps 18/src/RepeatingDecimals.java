
import java.util.HashMap;
import java.util.Map;

public class RepeatingDecimals {
	public static String calculateFraction(int numerator, int denominator)
    {
        if (numerator == 0)
            return "0"; // if numerator is zero
        if (denominator == 0)
            return ""; // if denominator is zero
 
        // result StringBuilder
 
        StringBuilder result = new StringBuilder();
        if ((numerator < 0) ^ (denominator < 0))
            result.append("-"); // check -ve sign
 
        // absolute values of num and den
 
        numerator = Math.abs(numerator);
        denominator = Math.abs(denominator);
 
        long q = numerator / denominator; // Quotient
        long r = numerator % denominator * 10; // calculating remainder
 
        result.append(
            String.valueOf(q)); // appending quotient
        if (r == 0)
            return result
                .toString(); // return if remainder is 0
 
        // if remainder is not zero, continue
 
        result.append(".");
        Map<Long, Integer> m = new HashMap<>(); // map for storing remainder
                               // and the indexes of the
                               // appropriate decimal in
                               // stringbuilder
 
        while (r != 0) {
 
            if (m.containsKey(r)) {
 
                // if the rem is already present, find the
                // index and append ( )
 
                int index = m.get(r);
                String part1 = result.substring(0, index);
                String part2 = "("
                               + result.substring(
                                   index, result.length())
                               + ")";
                return part1 + part2;
            }
 
            // continue updating the map and appending quo
            // which was generated by dividing rem with den
 
            m.put(r, result.length());
            q = r / denominator;
            result.append(String.valueOf(q));
 
            // update rem
            r = (r % denominator) * 10;
        }
        return result.toString();
    }
 
    // Driver code
    public static void main(String[] args)
    {
        int num = 1;
        int den = 3;
 
        String str = calculateFraction(num, den);
 
        num = 1;
        den = 7;
 
        String str1 = calculateFraction(num, den);
 
        System.out.println(str);
        System.out.println(str1);
}
}